/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
export namespace Components {
    interface AssessmentComponent {
        "questions": any[];
        "resultsIntro": string;
        "showProgress": boolean;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle names
         */
        "middle": string[];
    }
}
export interface AssessmentComponentCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLAssessmentComponentElement;
}
export interface MyComponentCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMyComponentElement;
}
declare global {
    interface HTMLAssessmentComponentElement extends Components.AssessmentComponent, HTMLStencilElement {
    }
    var HTMLAssessmentComponentElement: {
        prototype: HTMLAssessmentComponentElement;
        new (): HTMLAssessmentComponentElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "assessment-component": HTMLAssessmentComponentElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface AssessmentComponent {
        "onAssessmentCompleted"?: (event: AssessmentComponentCustomEvent<any>) => void;
        "onPageChanged"?: (event: AssessmentComponentCustomEvent<number>) => void;
        "onProgressUpdated"?: (event: AssessmentComponentCustomEvent<number>) => void;
        "questions"?: any[];
        "resultsIntro"?: string;
        "showProgress"?: boolean;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle names
         */
        "middle"?: string[];
        /**
          * A custom named click handler
         */
        "onNameClicked"?: (event: MyComponentCustomEvent<string>) => void;
    }
    interface IntrinsicElements {
        "assessment-component": AssessmentComponent;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "assessment-component": LocalJSX.AssessmentComponent & JSXBase.HTMLAttributes<HTMLAssessmentComponentElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
